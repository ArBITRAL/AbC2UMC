component Man
	  attributes: id, partner, prefs
	  behaviour:
		let {
		    M := [this.partner := this.prefs.head,
		      	 this.prefs := this.prefs.tail,
			 ](_propose, this.id)@(id = this.partner).M1
		    M1 := [this.partner := 0]($msg = _no)($msg).M
		   }
	        in M
end

component Woman
	  attributes: id, partner, prefs
	  behaviour:
		let {
		    W := Handle |^2 W
		    Handle := ($msg = _propose)($msg, $id).(W1($id) + W2($id))
		    W1(y) := <this.prefs[this.partner] < this.prefs[$y]>
		    [$ex := this.partner,this.partner := $y,](_no)@(id = $ex).nil
		    W2(y) := <this.prefs[this.partner] > this.prefs[$y]>(_no)@(id = $y).nil
		   }
	        in W
end

C1: Man (id -> 1, partner -> 0, prefs -> [4,5,6])
C2: Man (id -> 2, partner -> 0, prefs -> [5,6,4])
C3: Man (id -> 3, partner -> 0, prefs -> [6,4,5])
C4: Woman (id -> 4,partner -> 0,  prefs -> [0,3,2,1])
C5: Woman (id -> 5,partner -> 0,  prefs -> [0,1,3,2])
C6: Woman (id -> 6,partner -> 0,  prefs -> [0,2,1,3])
